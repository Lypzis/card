{"version":3,"sources":["assets/icons/sprite.svg","assets/images/safrapay.png","Home.js","containers/Atendimento.js","containers/Pagamento.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","current","balanceShow","balanceShowDetails","loaded","total","cheque","totalForDisplay","history","key","className","onClickBackHome","setState","Fragment","href","onClick","onClickNotification","xlinkHref","sprite","src","safrapay","alt","id","onEyeClick","showBalanceDetails","type","placeholder","balance","document","getElementById","style","display","localDate","Date","toLocaleDateString","year","month","day","numberWithCommas","x","number","parseFloat","toFixed","split","join","addBalance","value","Math","random","arrayTemp","newTotal","formatedTotal","unshift","decreaseBalance","abs","regressiveTimer","callback","timeout","window","setTimeout","regressiveTimer2","this","Component","Atendimento","renderButtons","name","icon","map","e","to","Pagamento","App","path","component","from","Boolean","location","hostname","match","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a439c16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.c1330358.svg\";","module.exports = __webpack_public_path__ + \"static/media/safrapay.73a0c6e1.png\";","import React, { Component } from 'react';\nimport './App.css';\n\nimport sprite from './assets/icons/sprite.svg';\nimport safrapay from './assets/images/safrapay.png';\n\nclass Home extends Component {\n\n  state = {\n    current: null,\n    balanceShow: true,\n    balanceShowDetails: false,\n    loaded: false,\n    total: 500.00,\n    cheque: 0.00,\n    totalForDisplay: 500.00,\n    history: [\n      <li key=\"01\" className=\"App__launch-list-item\"> {/*this is dynamic too*/}\n        <div className=\"App__launch-list-item-action\">\n          <p className=\"paragraph-3\">DÃ‰BITO SEGURO</p>\n          <p className=\"paragraph-4\">30 de out de 2019</p>\n        </div>\n        <p className=\"App__money App__money--2\">-R$9,90</p>\n      </li>,\n\n      <li key=\"02\" className=\"App__launch-list-item\"> {/*this is dynamic too*/}\n        <div className=\"App__launch-list-item-action\">\n          <p className=\"paragraph-3\">MASTER ANTECIPACAO</p>\n          <p className=\"paragraph-4\">28 de out de 2019</p>\n        </div>\n        <p className=\"App__money App__money--3\">R$10,35</p>\n      </li>\n    ]\n  }\n\n  componentDidMount() {\n    this.onClickBackHome();\n  }\n\n  onClickBackHome = () => {\n    this.setState({\n      current:\n        <React.Fragment>\n          <div className=\"App home\">\n            <section className=\"App__header\">\n              <div className=\"App__message\">\n                &emsp;\n            <p className=\"paragraph-1\">Toque no cartÃ£o para pagar com QR Code</p>\n                <a href=\"#\" onClick={this.onClickNotification}>\n                  <svg className=\"App__notification\" >\n                    <use xlinkHref={`${sprite}#icon-bell`}></use>\n                  </svg>\n                </a>\n              </div>\n\n              <div className=\"App__card\">\n                &emsp;\n              {/*<img className=\"App__logo\" src={qrcode} alt=\"Pagar com QR code\" /> qrcode logo here*/}\n                <img className=\"App__logo App__logo--2\" src={safrapay} alt=\"Safrapay Logo\" /> {/*company logo here*/}\n                <div className=\"App__card-owner\">\n                  <p className=\"paragraph-2\">Banco: 422</p>\n                  <p className=\"paragraph-2\">AG: 0097</p>\n                  <p className=\"paragraph-2\">C/C: 819928-6</p>\n                  <p className=\"paragraph-2 sm-margin\">Fernando Bento da Silva Neto</p>\n                </div>\n              </div>\n\n              <div className=\"App__message--2\">\n                <p className=\"paragraph-1\">Saldo disponÃ­vel + limites</p>\n\n                <div className=\"App__show-money\">\n                  <p id=\"balance\" className=\"App__money\">R${this.state.totalForDisplay}</p>\n                  <a href=\"#\" onClick={this.onEyeClick}>\n                    {\n                      this.state.balanceShow ?\n                        <svg id=\"eye\" className=\"App__notification\">\n                          <use xlinkHref={`${sprite}#icon-eye-blocked`}></use>\n                        </svg> :\n                        <svg id=\"eye\" className=\"App__notification\">\n                          <use xlinkHref={`${sprite}#icon-eye`}></use>\n                        </svg>\n                    }\n                  </a>\n                </div>\n\n                {\n                  this.state.balanceShowDetails ?\n                    <React.Fragment>\n                      <a href=\"#\" onClick={this.showBalanceDetails}>\n                        <svg className=\"App__notification\">\n                          <use xlinkHref={`${sprite}#icon-circle-up`}></use>\n                        </svg>\n                      </a>\n                      <div className=\"App__balance-details\">\n                        <ul className=\"App__balance-details-list\">\n                          <li className=\"App__balance-details-list-item\">\n                            <p className=\"paragraph-1\">Saldo em conta</p>\n                            <p id=\"balance\" className=\"App__money\">R${this.state.totalForDisplay}</p>\n                          </li>\n                          <li className=\"App__balance-details-list-item\">\n                            <p className=\"paragraph-1\">Saldo em conta + Cheque Empreendedor</p>\n                            <p id=\"balance\" className=\"App__money\">R${this.state.totalForDisplay}</p>\n                          </li>\n                          <li className=\"App__balance-details-list-item\">\n                            <p className=\"paragraph-1\">Saldo total disponÃ­vel</p>\n                            <p id=\"balance\" className=\"App__money\">R${this.state.totalForDisplay}</p>\n                          </li>\n                        </ul>\n                        <div className=\"App__balance-details-buttons\">\n                          <button className=\"App__button App__button--2 App__button--3\">Extrato</button>\n                          <button className=\"App__button App__button--2 App__button--3\">Pacote de serviÃ§os</button>\n                        </div>\n                      </div>\n                    </React.Fragment> :\n                    <a href=\"#\" onClick={this.showBalanceDetails}>\n                      <svg className=\"App__notification\">\n                        <use xlinkHref={`${sprite}#icon-circle-down`}></use>\n                      </svg>\n                    </a>\n                }\n              </div>\n\n\n            </section>\n\n            <section className=\"App__body\">\n\n              <div className=\"App__search\">\n                <input className=\"App__search-input\" type=\"text\" placeholder=\"Como podemos te ajudar?\" />\n                <svg className=\"App__notification App__notification--2\">\n                  <use xlinkHref={`${sprite}#icon-search`}></use>\n                </svg>\n              </div>\n\n              <div className=\"App__menu\"> {/*reusable??? */}\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-loop2`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Transferir</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-address-book`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Contato</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-coin-dollar`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Pagar</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-credit-card`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">CartÃ£o de CrÃ©dito</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-coin-dollar`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Saque</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-newspaper`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">SafraPay</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-credit-card`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Vender com CartÃ£o</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-new-tab`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Cobrar com Link</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-envelop`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Trazer seu SalÃ¡rio</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-barcode`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">CobranÃ§a</p>\n                </button>\n\n                <button className=\"App__button button-1\">\n                  <svg className=\"App__notification App__notification--3\">\n                    <use xlinkHref={`${sprite}#icon-search`}></use>\n                  </svg>\n                  <p className=\"paragraph-3\">Ver mais</p> {/*this opens another menu*/}\n                </button>\n              </div>\n\n              <div className=\"App__advertisement\">\n                <img src=\"\" alt=\"\" />\n                <img src=\"\" alt=\"\" />\n              </div>\n\n              <div className=\"App__launch\">\n                <h2 className=\"header-2\">Ãšltimos LanÃ§amentos</h2>\n                <ul className=\"App__launch-list\">\n\n                  {this.state.history}\n\n                </ul>\n\n                <button className=\"App__button App__button--2\">Ver extrato</button>\n              </div>\n            </section>\n\n\n          </div>\n           </React.Fragment>\n    });\n\n  }\n\n  onClickNotification = () => {\n\n    this.setState({\n      current: (\n        <React.Fragment>\n          <div className=\"App notifications\">\n            <div className=\"notification__box-title\">\n              <a href=\"#\" onClick={this.onClickBackHome}>\n                <svg className=\"App__notification App__notification--5\" >\n                  <use xlinkHref={`${sprite}#icon-circle-left`}></use>\n                </svg>\n              </a>\n              <h1 className=\"header-1\">NotificaÃ§Ãµes</h1>\n              &emsp;\n          </div>\n            <div className=\"date-box\">02/11/2019</div>\n            <ul>\n              <li className=\"notification__box\"> {/*possibly dinamic*/}\n                <div>\n                  <div className=\"notification__box-header\">\n                    <span className=\"blue__dot\">&emsp;</span>\n                    <h2 className=\"header-2 black\">Bem Vindo ao SafraPay digital</h2>\n                  </div>\n                  <p className=\"paragraph-3\">ConheÃ§a as novas funcionalidades do seu app</p>\n                </div>\n                <svg className=\"App__notification App__notification--2 App__notification--5\">\n                  <use xlinkHref={`${sprite}#icon-circle-right`}></use>\n                </svg>\n              </li>\n            </ul>\n\n          </div>\n        </React.Fragment>\n      )\n    });\n  }\n\n  showBalanceDetails = () => {\n    if (this.state.balanceShowDetails)\n      this.setState({\n        balanceShowDetails: false\n      });\n    else if (!this.state.balanceShowDetails)\n      this.setState({\n        balanceShowDetails: true\n      });\n\n    this.onClickBackHome();\n  }\n\n  onEyeClick = () => {\n    const balance = document.getElementById('balance');\n\n    if (this.state.balanceShow) {\n      balance.style.display = 'block';\n      this.setState({\n        balanceShow: false\n      });\n    }\n\n    else if (!this.state.balanceShow) {\n      balance.style.display = 'none';\n      this.setState({\n        balanceShow: true\n      });\n    }\n\n    this.onClickBackHome();\n  }\n\n  localDate = () => {\n    const date = new Date()\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n\n    return date.toLocaleDateString('pt-BR', options);\n  }\n\n  numberWithCommas = (x) => {\n\n    const number = parseFloat(x).toFixed(2).split('.');\n    number[0] = number[0].split(/(?=(?:...)*$)/).join('.');\n    return number.join(',');\n\n    // first case won't return 10,50, and will instead return 10,5\n    //return parseFloat(x).toLocaleString('pt-BR') //'pt-BR' x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  addBalance = () => {\n    let value = Math.random() * (100 - 30) + 30;\n\n    const arrayTemp = [...this.state.history];\n    let newTotal = { ...this.state };\n\n    newTotal.total = parseFloat(newTotal.total) + value;\n\n    const formatedTotal = (value).toFixed(2);\n\n    arrayTemp.unshift(\n      <li key={value} className=\"App__launch-list-item\"> {/*this is dynamic too*/}\n        <div className=\"App__launch-list-item-action\">\n          <p className=\"paragraph-3\">MASTER ANTECIPACAO</p>\n          <p className=\"paragraph-4\">{this.localDate()}</p>\n        </div>\n        <p className=\"App__money App__money--3\">R${this.numberWithCommas(formatedTotal)}</p>\n      </li>\n    );\n\n    this.setState({\n      total: (newTotal.total).toFixed(2),\n      cheque: 0.00,\n      history: arrayTemp,\n      totalForDisplay: this.numberWithCommas(parseFloat(newTotal.total).toFixed(2))\n    });\n\n    this.onClickBackHome();\n  }\n\n  decreaseBalance = () => {\n    const value = Math.random() * (30 - 0) + 0;;\n\n    const arrayTemp = [...this.state.history];\n    let newTotal = {...this.state};\n\n    let formatedTotal;\n\n    if (newTotal.total <= 0 && Math.abs(newTotal.total) > value) {\n\n      newTotal.total = parseFloat(this.state.total) - parseFloat(this.state.total);\n\n      formatedTotal = parseFloat(this.state.total);\n    } else {\n      newTotal.total = parseFloat(newTotal.total) - value;\n      formatedTotal = value;\n    }\n\n    arrayTemp.unshift(\n      <li key={value} className=\"App__launch-list-item\"> {/*this is dynamic too*/}\n        <div className=\"App__launch-list-item-action\">\n          <p className=\"paragraph-3\">DÃ‰BITO SEGURO</p>\n          <p className=\"paragraph-4\">{this.localDate()}</p>\n        </div>\n        <p className=\"App__money App__money--2\">-R${this.numberWithCommas(formatedTotal.toFixed(2))}</p>\n      </li>\n    );\n\n    this.setState({\n      total: parseFloat(newTotal.total).toFixed(2),\n      cheque: 0.00,\n      history: arrayTemp,\n      totalForDisplay: this.numberWithCommas(parseFloat(newTotal.total).toFixed(2))\n    });\n\n    this.onClickBackHome();\n  }\n\n  /**\n     * Executes a given callback function each second(1000ms)\n     * @param {function} callback \n     * @returns a function\n     */\n  regressiveTimer = (callback) => {\n    callback();\n\n    this.timeout = window.setTimeout(() => {\n      this.regressiveTimer(callback);\n    }, 4000);\n  }\n\n  regressiveTimer2 = (callback) => {\n    callback();\n\n    this.timeout = window.setTimeout(() => {\n      this.regressiveTimer(callback);\n    }, 6000);\n  }\n\n  render() {\n    if (document.getElementById('balance') && !this.state.loaded) {\n      this.onEyeClick();\n      this.setState({\n        loaded: true\n      });\n    }\n\n    if (!this.state.loaded) {\n      this.showBalanceDetails();\n      this.setState({\n        loaded: true\n      });\n    }\n\n    // find a wayt to trigger render\n    if (!this.state.loaded) {\n      this.regressiveTimer(this.addBalance);\n      this.regressiveTimer2(this.decreaseBalance);\n    }\n\n    return (\n      <React.Fragment>\n        {this.state.current}\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\n\nclass Atendimento extends Component {\n\n    renderButtons = () => {\n\n        const buttons = [\n            {name: \"Meu Acesso\", icon: \"icon-key\"},\n            {name: \"Minha Conta\", icon: \"icon-newspaper\"},\n            {name: \"Minhas CondiÃ§Ãµes\", icon: \"icon-pencil\"},\n            {name: \"Meu CartÃ£o\", icon: \"icon-credit-card\"},\n            {name: \"Vincular CartÃ£o\", icon: \"icon-upload2\"},\n            {name: \"Pagamentos\", icon: \"icon-coin-dollar\"},\n            {name: \"CobranÃ§a\", icon: \"icon-coin-dollar\"},\n            {name: \"Minhas Vendas SafraPay\", icon: \"icon-barcode\"},\n            {name: \"SeguranÃ§a\", icon: \"icon-lock\"},\n            {name: \"Canais de Atendimento\", icon: \"icon-bubble2\"},\n            {name: \"Falar com um Especialista\", icon: \"icon-headphones\"},\n        ].map(e => {\n            return (\n                <button className=\"App__button App__button--4\">\n                    <svg className=\"App__notification App__notification--3\">\n                        <use xlinkHref={`${sprite}#${e.icon}`}></use>\n                    </svg>\n                    <p className=\"paragraph-3\">{e.name}</p>\n                    <svg className=\"App__notification App__notification--3\">\n                        <use xlinkHref={`${sprite}#icon-circle-right`}></use>\n                    </svg>\n                </button>\n            );\n        })\n\n        return buttons;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"App\">\n                    <div className=\"notification__box-title\">\n                        <Link to=\"/\">\n                            <svg className=\"App__notification App__notification--5\" >\n                                <use xlinkHref={`${sprite}#icon-circle-left`}></use>\n                            </svg>\n                        </Link>\n                        <h1 className=\"header-1\">Atendimento</h1>\n                        &emsp;\n                    </div>\n                </div>\n\n                {/*this need editing later*/}\n                <div className=\"App__search App__search--2\">\n                    <input className=\"App__search-input App__search-input--2\" type=\"text\" placeholder=\"Encontre ajuda usando palavras-chave\" />\n                    <svg className=\"App__notification App__notification--2 App__notification--5\">\n                        <use xlinkHref={`${sprite}#icon-search`}></use>\n                    </svg>\n                </div>\n\n                {/*buttons list */}\n                <div className=\"App__menu--vertical\">\n                    {this.renderButtons()}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Atendimento;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport sprite from '../assets/icons/sprite.svg';\n\nclass Pagamento extends Component {\n\n    renderButtons = () => {\n        const buttons = [\n            { name: \"GestÃ£o e Comprovantes\" },\n            { name: \"Transferir\" },\n            { name: \"Boletos DDA\" },\n            { name: \"Pagamentos Recusados\" },\n            { name: \"GestÃ£o de Favorecidos\" },\n        ].map(e => {\n            return (\n                <div className=\"Pagamento__option\">\n                    <p className=\"paragraph-2\">{e.name}</p>\n                    <button className=\"App__button App__button--2 Pagamento__option-button\">acessar</button>\n                </div>\n            );\n        })\n\n        return buttons;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"App\">\n                    <div className=\"notification__box-title\">\n                        <Link to=\"/\">\n                            <svg className=\"App__notification App__notification--5\" >\n                                <use xlinkHref={`${sprite}#icon-circle-left`}></use>\n                            </svg>\n                        </Link>\n                        <h1 className=\"header-1\">Pagar e Transferir</h1>\n                        &emsp;\n                    </div>\n                </div>\n\n                <div className=\"Pagamento\">\n                    {this.renderButtons()}\n                    <button className=\"App__button App__button--2 App__button--5\">\n                        Pagamento com cÃ³digo de barras\n                        <svg className=\"App__notification App__notification--3\">\n                            <use xlinkHref={`${sprite}#icon-barcode`}></use>\n                        </svg>\n                    </button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Pagamento;","import React, { Component } from 'react';\nimport { Route, Redirect, Switch, NavLink } from 'react-router-dom';\nimport './App.css';\n\nimport Home from './Home';\nimport Atendimento from './containers/Atendimento';\nimport Pagamento from './containers/Pagamento';\n\n//temp\nimport sprite from './assets/icons/sprite.svg';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route path=\"/card/pagamento\" component={Pagamento} />\n          <Route path=\"/card/atendimento\" component={Atendimento} />\n          <Route path=\"/card/home\" component={Home} />\n          <Redirect from=\"/\" to=\"/card/home\" />\n        </Switch>\n        <nav className=\"App__navigation\">\n            <NavLink to=\"/\" className=\"App__button button-1 App__navigation-button\">\n              <svg className=\"App__notification App__notification--3 App__notification--4\">\n                <use xlinkHref={`${sprite}#icon-home3`}></use>\n              </svg>\n              <p className=\"paragraph-3\">InÃ­cio</p>\n            </NavLink>\n            <NavLink to=\"/card/pagamento\" className=\"App__button button-1 App__navigation-button\">\n              <svg className=\"App__notification App__notification--3 App__notification--4\">\n                <use xlinkHref={`${sprite}#icon-coin-dollar`}></use>\n              </svg>\n              <p className=\"paragraph-3\">Pagamentos</p>\n            </NavLink>\n            <button className=\"App__button button-1 App__navigation-button\">\n              <svg className=\"App__notification App__notification--3 App__notification--4\">\n                <use xlinkHref={`${sprite}#icon-newspaper`}></use>\n              </svg>\n              <p className=\"paragraph-3\">SafraPay</p>\n            </button>\n            <NavLink to=\"/card/atendimento\" className=\"App__button button-1 App__navigation-button\">\n              <svg className=\"App__notification App__notification--3 App__notification--4\">\n                <use xlinkHref={`${sprite}#icon-headphones`}></use>\n              </svg>\n              <p className=\"paragraph-3\">Atendimento</p>\n            </NavLink>\n            <button className=\"App__button button-1 App__navigation-button\">\n              <svg className=\"App__notification App__notification--3 App__notification--4\">\n                <use xlinkHref={`${sprite}#icon-search`}></use>\n              </svg>\n              <p className=\"paragraph-3\">Ver mais</p>\n            </button>\n          </nav>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}